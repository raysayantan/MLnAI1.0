Apply Knn(brute force version) on these feature sets
- Review text, preprocessed one converted into vector using BOW
- Review text, preprocessed one converted into vector using TFIDF
- Review text, preprocessed one converted into vector using AVG W2V
- Review text, preprocessed one converted into vector using TfIdf W2V

Data file can be obtained from: https://www.kaggle.com/snap/amazon-fine-food-reviews

Apply Knn(kd tree version) on these feature sets 
NOTE: sklearn implementation of kd-tree accepts only dense matrices, you need to convert the sparse matrices of CountVectorizer/TfidfVectorizer into dense matices. You can convert sparse matrices to dense using .toarray() attribute. For more information please visit this link 
SET 5:Review text, preprocessed one converted into vectors using (BOW) but with restriction on maximum features generated. 
            count_vect = CountVectorizer(min_df=10, max_features=500) 
            count_vect.fit(preprocessed_reviews)
            
SET 6:Review text, preprocessed one converted into vectors using (TFIDF) but with restriction on maximum features generated. 
                tf_idf_vect = TfidfVectorizer(min_df=10, max_features=500)
                tf_idf_vect.fit(preprocessed_reviews)
            
SET 3:Review text, preprocessed one converted into vectors using (AVG W2v)
SET 4:Review text, preprocessed one converted into vectors using (TFIDF W2v)

The hyper paramter tuning(find best K) 
Find the best hyper parameter which will give the maximum AUC value
Find the best hyper paramter using k-fold cross validation or simple cross validation data
Use gridsearch cv or randomsearch cv or you can also write your own for loops to do this task of hyperparameter tuning

Representation of results 
You need to plot the performance of model both on train data and cross validation data for each hyper parameter, like shown in the figure 
Once after you found the best hyper parameter, you need to train your model with it, and find the AUC on test data and plot the ROC curve on both train and test. 
Along with plotting ROC curve, you need to print the confusion matrix with predicted and original labels of test data points 

Conclusion 
You need to summarize the results at the end of the notebook, summarize it in the table format. To print out a table please refer to this prettytable library link 
